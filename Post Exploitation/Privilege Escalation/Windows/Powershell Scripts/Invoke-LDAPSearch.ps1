function Invoke-LDAPSearch {
   <#
   .Synopsis
   Send queries using custom connect strings, filters, and credentials. All arguments are optional.
   .Parameter connect
   Supply a custom LDAP connection string.
   .Parameter filter
   Supply an LDAP query filter.
   .Parameter username
   Supply a username for authentication
   .Parameter password
   Supply a password for authentication
   .Example
   PS> Invoke-LDAPSearch -connect "LDAP://10.0.0.1/DC=domain,DC=local"
   .Example
   PS> Invoke-LDAPSearch -filter "samaccounttype=805306368"
   .Example
   PS> Invoke-LDAPSearch -username "bob" -password "pass123"
   #>
    param (
        [Parameter()]
        [string]
        $connect,
        [Parameter()]
        [string]
        $filter,
        [Parameter()]
        [string]
        $username,
        [Parameter()]
        [string]
        $password
    )

    $searcher = New-Object System.DirectoryServices.DirectorySearcher
    if (!$PSBoundParameters.ContainsKey('connect')) {
        $connect = $searcher.SearchRoot.Path
    }

    if ($PSBoundParameters.ContainsKey('username') -or $PSBoundParameters.ContainsKey('password')) {
        $searcher.SearchRoot = New-Object System.DirectoryServices.DirectoryEntry($connect, $username, $password)
    } else {
        $searcher.SearchRoot = New-Object System.DirectoryServices.DirectoryEntry($connect)
    }

    $searcher.Filter = $filter
    $searcher.FindAll()
}
